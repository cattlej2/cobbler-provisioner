---
- name: Set cobbler server
  hosts: localhost
  become: True

  vars_files:
    - infra-vars.yml

  vars_prompt:
    - name: root_password_crypted
      prompt: ROOT PASSWORD
      private: yes
      encrypt: md5_crypt
      confirm: yes
    - name: ks_username
      prompt: USER CREATION
      private: no
    - name: ks_user_password_crypted
      prompt: USER PASSWORD
      private: yes
      encrypt: md5_crypt
      confirm: yes

  tasks:
    - name: Disable SELinux in /etc/selinux/config file
      selinux:
        state: disabled

    - name: Check the current SELinux status
      command: getenforce
      register: getenforce_output

    - name: Set SELinux to permissive
      command: setenforce 0
      when: getenforce_output.stdout == 'Enforcing'

    - name: Stop firewalld
      service:
        name: firewalld
        state: stopped

    - name: Disable firewalld
      service:
        name: firewalld
        enabled: no

    - name: Install packages required
      yum:
        name: "{{ item }}"
        state: present
      loop:
        - cobbler
        - pykickstart
        - dhcp
        - xinetd
        - chrony

    - name: Set the chrony config file to allow client access
      replace:
        path: /etc/chrony.conf
        regexp: '^#?\s*?(allow)\s*.*$'
        replace: 'allow {{ chrony_client_net }}'

    - name: Enable services
      service:
        name: "{{ item }}"
        enabled: yes
      loop:
        - cobblerd
        - httpd
        - rsyncd
        - dhcpd
        - xinetd
        - tftp
        - chronyd

    - name: Start services
      service:
        name: "{{ item }}"
        state: started
      loop:
        - cobblerd
        - httpd
        - rsyncd
        - xinetd
        - tftp
        - chronyd

    - name: Copy dhcp.template file
      template:
        src: templates/dhcp.template.j2
        dest: /etc/cobbler/dhcp.template
        owner: root
        group: root
        mode: 0644

    - name: Copy settings file
      template:
        src: templates/settings.j2
        dest: /etc/cobbler/settings
        owner: root
        group: root
        mode: 0644

    - name: Copy kickstart file
      template:
        src: templates/sample_end.ks.j2
        dest: /var/lib/cobbler/kickstarts/sample_end.ks
        owner: root
        group: root
        mode: 0644

    - name: Set tftp config disable yes to no
      replace:
        path: /etc/xinetd.d/tftp
        regexp: '(disable\s*?=)\s*?.*$'
        replace: '\1 no'

    - name: Set httpd listen port
      replace:
        path: /etc/httpd/conf/httpd.conf
        regexp: '^(Listen)\s*?.*$'
        replace: '\1 {{ cobbler_httpd_port }}'
      register: listen_port

    - name: Restart httpd service
      service:
        name: httpd
        state: restarted
      when: listen_port.changed

    - name: Get boot loaders into /var/lib/cobbler/loaders
      command: cobbler get-loaders

    - name: Restart cobblerd
      service:
        name: cobblerd
        state: restarted

    - name: Sync cobbler
      command: cobbler sync

    - name: Mount OS image
      mount:
        path: "{{ iso_mount_point }}"
        src: "{{ playbook_dir }}/{{ iso_filename }}"
        fstype: iso9660
        opts: loop,ro
        state: mounted

    - name: Unlink the OS repo symlink
      file:
        path: "/var/www/cobbler/ks_mirror/{{ os_release }}-{{ cpu_arch }}"
        state: absent

    - name: Import distro and profile
      command: cobbler import --name={{ os_release }} --arch={{ cpu_arch }} --path={{ iso_mount_point }}
      ignore_errors: True

    - name: Create repo mirrors on the cobbler server
      command: cobbler repo add --name={{ item.name }} --mirror={{ item.url }} --keep-updated=Y --mirror-locally=Y --arch=x86_64 --breed=yum
      loop: "{{ mirror_list }}"
      ignore_errors: True

    - name: Sync repo
      command: cobbler reposync
      when: reposync_from_internet

    - name: Add repos to the profile
      command: cobbler profile edit --name={{ os_release }}-{{ cpu_arch }} --repos="{{ mirror_dict.keys() | join(' ') }}"

    - name: Remove the existing systems
      command: cobbler system remove --name={{ item.name }}
      loop: "{{ systems_provisioned }}"
      ignore_errors: True

    - name: Add systems
      command: cobbler system add --name={{ item.name }} --profile={{ item.profile }} --gateway={{ item.gateway }} --hostname={{ item.name }} --name-servers={{ item.name_servers }}
      loop: "{{ systems_provisioned }}"

    - name: Add 1st interface cfg for bonding
      command: cobbler system edit --name={{ item.name }} --interface={{ item.interface_1st }} --mac={{ item.mac_1st }} --interface-type=bond_slave --interface-master=bond0
      loop: "{{ systems_provisioned }}"

    - name: Add 2nd interface cfg for bonding
      command: cobbler system edit --name={{ item.name }} --interface={{ item.interface_2nd }} --mac={{ item.mac_2nd }} --interface-type=bond_slave --interface-master=bond0
      loop: "{{ systems_provisioned }}"

    - name: Add a bonded interface cfg for bonding
      command: cobbler system edit --name={{ item.name }} --interface=bond0 --interface-type=bond --bonding-opts={{ item.bonding_opts }} --ip-address={{ item.ip_address }} --netmask={{ item.netmask }} --static=1 --mtu={{ item.mtu }}
      loop: "{{ systems_provisioned }}"

    - name: Restart cobblerd
      service:
        name: cobblerd
        state: restarted

    - name: Sync cobbler
      command: cobbler sync
